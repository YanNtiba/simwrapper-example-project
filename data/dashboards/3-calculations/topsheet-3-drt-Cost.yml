# Topsheet Test
title: Tabelle
title_en: DRT operational cost analysis
title_de: TODO

# Input files -------------------------
files:
  vehicle_stats:
    file: "*drt_vehicle_stats_av.csv"
    #useLastRow: true
  income_stats:
    file: "*drt_customer_stats_drt.csv"
    #useLastRow: true
 
# These are text entry boxes in the UI
userEntries:
  vehCost_fix:
    title_en: Vehicle daily maintainence cost (Euro per vehicle)
    title_de: Veh-Cost (Fixed)
    value: 10.0
  vehCost_km:
    title_en: Vehicle operational cost (distance based, Euro per km)
    title_de: Veh-Cost / km
    value: 0.2
  vehCost_hour:
    title_en: Vehicle operational cost (time based, Euro per hour)
    title_de: Veh-Cost / hour
    value: 18.00

# Calculations ------------------------
# these are evaluated top down!
calculations: 
  num_veh: '{@sum(vehicle_stats.vehicles, vehicle_stats.vehicles > 0)}'
  total_distance: '{@mean(vehicle_stats.totalDistance)}'
  total_time: 16
  inventory_cost: vehCost_fix * num_veh
  operational_cost: vehCost_km * total_distance / 1000 + vehCost_hour * total_time
  total_cost: inventory_cost + operational_cost
  average_fare: '{@last(income_stats.fareAllReferences_mean)}'
  rides: '{@last(income_stats.rides)}'
  income: average_fare * rides
  net_income: income - total_cost

# Table rows
outputs:
  - title_en: Total daily cost (Euro)
    title_de: Nachfrage
    value: total_cost
  - title_en: Daily income from fare (Euro)
    title_de: Nachfrage
    value: income
  - title_en: Daily net benefit (Euro)
    title_de: Nachfrage
    value: net_income
  - title: NUM VEHICLES
    value: num_veh
  - title: TOTAL DISTANCE
    value: total_distance
